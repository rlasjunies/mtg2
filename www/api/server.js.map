{"version":3,"sources":["server.ts"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["import * as express from \"express\";\r\nimport * as bodyparser from \"body-parser\";\r\nimport * as morgan from \"morgan\";\r\nimport * as passport from \"passport\";\r\n\r\nimport * as xLocalStrategy from \"./authentication/localStrategy\";\r\nimport * as $AuthLocal from \"./authentication/localAuth\";\r\nimport * as $Authorization from \"./authorization/authorization.middleware\";\r\nimport * as xAuthFacebook from \"./authentication/facebookAuth\";\r\nimport * as xAuthGoogle from \"./authentication/googleAuth\";\r\nimport * as xEmailVerif from \"./authentication/emailVerification\";\r\nimport * as $log from \"./services/logger\";\r\nimport * as path from \"path\";\r\n\r\n\r\n//Initialisation of the $\r\nimport * as $ from \"./services/mtg\";\r\n$.server.rootPath = __dirname;\r\n$.server.dataPath = path.join($.server.rootPath, \"../api_data\");\r\n$.server.picturesPath = path.join($.server.dataPath, \"pictures\");\r\n$.server.rolesFileName = path.join($.server.dataPath, \"authorization/roles.json\");\r\n$.server.accessRightFileName = path.join($.server.dataPath, \"authorization/accessRight.json\");\r\n$.server.emailVerificationFileName = path.join($.server.rootPath, \"authentication/emailVerification.html\");\r\n\r\nexport var app = express();\r\nprocess.env.NODE_ENV = process.env.NODE_ENV || \"development\";\r\n\r\nimport * as xDb from \"./services/db\";\r\nxDb.connect();\r\n\r\napp.use(bodyparser.json());\r\napp.use(passport.initialize());\r\n\r\nmorgan.token(\"statuscolorized\", (expReq, expRes): string => {\r\n    var color = 32; // green\r\n    var status = expRes.statusCode;\r\n    if (status >= 500) { color = 31; } // red\r\n    else if (status >= 400) {color = 33;} // yellow\r\n    else if (status >= 300) {color = 36;} // cyan\r\n    return \"\\x1b[\" + color + \"m:\" + status +\"\\x1b[0m\";\r\n});\r\n\r\napp.use(morgan(\":date[iso] :method :url :statuscolorized :response-time ms - :res[content-length]\"));\r\n\r\npassport.serializeUser((user, done: (err: any, id: any) => void) => {\r\n    done(null, user.id);\r\n});\r\n\r\napp.use(function (req: express.Request, res: express.Response, next) {\r\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n    res.header(\"Access-Control-Allow-Methods\", \"GET,PUT,POST,DELETE\");\r\n    res.header(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization\");\r\n    next();\r\n});\r\n\r\n//static files routes\r\napp.use(\"/\", express.static(__dirname + \"/../web\"));\r\n//app.use(\"/Scripts\", express.static(__dirname + \"/../../seedTSClient/libs\"));\r\napp.use(\"/bower_components\", express.static(__dirname + \"/../bower_components\"));\r\n//app.use(\"/app\", express.static(__dirname));\r\napp.use(\"/styles\", express.static(__dirname + \"/../styles\"));\r\n//app.use(\"/fonts\", express.static(__dirname + \"/../../seedTSClient/fonts\"));\r\napp.use(\"/images\", express.static(__dirname + \"/../images\"));\r\napp.use(\"/pictures\", express.static($.server.picturesPath));\r\n\r\n//authentication strategy\r\npassport.use(\"local-register\", xLocalStrategy.register());\r\npassport.use(\"local-login\", xLocalStrategy.login());\r\n\r\n//authentication routes\r\napp.post(\"/auth/register\", passport.authenticate(\"local-register\"), $AuthLocal.register);\r\napp.post(\"/auth/login\", passport.authenticate(\"local-login\"), $AuthLocal.login);\r\napp.get(\"/auth/verifyemail\", xEmailVerif.verify);\r\napp.post(\"/auth/facebook\", xAuthFacebook.facebookAuth);\r\napp.post(\"/auth/google\", xAuthGoogle.googleAuth);\r\n\r\n//authorization\r\nimport * as $AuthorizationRoutes from \"./authorization/authorizationRoutes\";\r\nrootRoute = \"/api/authorization/roles\";\r\napp.get(rootRoute, $AuthLocal.authenticationCheck, $Authorization.checksAccessRight(\"ROLES_GET_ALL\"), $AuthorizationRoutes.getAllRoles);\r\n\r\n//pictures routes\r\nimport * as $PicturesRoutes from \"./pictures/picturesRoutes\";\r\nrootRoute = \"/api/pictures/\";\r\napp.post(rootRoute + \"upload\", $AuthLocal.authenticationCheck, $Authorization.checksAccessRight(\"PICTURES_POST_UPLOAD\"), $PicturesRoutes.uploadPicture);\r\n//app.get(rootRoute, $AuthLocal.authenticationCheck, $Authorization.checksAccessRight(\"PICTURES_GET_ALL\"), $PicturesRoutes.getAllPictures);\r\napp.get(rootRoute, $PicturesRoutes.getAllPictures);\r\napp.delete(rootRoute + \":id\", $AuthLocal.authenticationCheck, $Authorization.checksAccessRight(\"PICTURES_DELETE_ID\"), $PicturesRoutes.deletePicture);\r\n\r\n//users routes\r\nimport * as $UsersRoutes from \"./users/usersRoutes\";\r\nrootRoute = \"/api/adm/users/\";\r\napp.post(rootRoute, $AuthLocal.authenticationCheck, $Authorization.checksAccessRight(\"USERS_POST_CREATE\"), $UsersRoutes.create);\r\napp.get(rootRoute + \":id?\", $AuthLocal.authenticationCheck, $Authorization.checksAccessRight(\"USERS_GET_ID\"), $UsersRoutes.find);\r\napp.delete(rootRoute + \":id?\", $AuthLocal.authenticationCheck, $Authorization.checksAccessRight(\"USERS_DELETE_ID\"), $UsersRoutes.remove);\r\napp.put(rootRoute + \":id?\", $AuthLocal.authenticationCheck, $Authorization.checksAccessRight(\"USERS_PUT_ID\"), $UsersRoutes.update);\r\n\r\nrootRoute = \"/api/adm/users/me\";\r\napp.get(rootRoute, $AuthLocal.authenticationCheck, $UsersRoutes.findMe);\r\napp.put(rootRoute, $AuthLocal.authenticationCheck, $UsersRoutes.updateMe);\r\n\r\n//paints routes\r\nimport * as $PaintsRoutes from \"./paints/paintsRoutes\";\r\nvar rootRoute = \"/api/paints/\";\r\napp.post(rootRoute, $AuthLocal.authenticationCheck, $Authorization.checksAccessRight(\"PAINTS_POST\"),$PaintsRoutes.create);\r\napp.get(rootRoute + \":id?\", $AuthLocal.authenticationCheck, $Authorization.checksAccessRight(\"PAINTS_GET_ID\"), $PaintsRoutes.find);\r\napp.delete(rootRoute + \":id?\", $AuthLocal.authenticationCheck, $Authorization.checksAccessRight(\"PAINTS_DELETE_ID\"), $PaintsRoutes.remove);\r\napp.put(rootRoute + \":id?\", $AuthLocal.authenticationCheck, $Authorization.checksAccessRight(\"PAINTS_PUT_ID\"), $PaintsRoutes.update);\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n    // configure stuff here\r\n}\r\n\r\napp.get(\"*\", (req: express.Request, res: express.Response, next) => {\r\n    res.redirect(\"/index.html\");\r\n});\r\n\r\nif (!process.env.PORT) { process.env.PORT = 3000; }\r\n\r\nvar srv = app.listen(process.env.PORT, process.env.IP);\r\nsrv.on(\"listening\", () => {\r\n    $log.info(\"webserver listening http requests on:\" + process.env.PORT);\r\n});\r\n"],"sourceRoot":"/source/"}