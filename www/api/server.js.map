{"version":3,"sources":["server.ts"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["import express = require(\"express\");\r\nimport bodyparser = require(\"body-parser\");\r\nimport morgan = require(\"morgan\");\r\nimport passport = require(\"passport\");\r\n\r\nimport xLocalStrategy = require(\"./authentication/localStrategy\");\r\nimport $AuthLocal = require(\"./authentication/localAuth\");\r\nimport $Authorization = require(\"./authorization/authorization.middleware\");\r\nimport xAuthFacebook = require(\"./authentication/facebookAuth\");\r\nimport xAuthGoogle = require(\"./authentication/googleAuth\");\r\nimport xEmailVerif = require(\"./authentication/emailVerification\");\r\nimport $log = require(\"./services/logger\");\r\nimport path = require(\"path\"); \r\n\r\n\r\n//Initialisation of the $\r\nimport $ = require(\"./services/mtg\"); \r\n$.server.rootPath = __dirname;\r\n$.server.dataPath = path.join($.server.rootPath, \"../api_data\");\r\n$.server.picturesPath = path.join($.server.dataPath, \"pictures\");\r\n$.server.rolesFileName = path.join($.server.dataPath, \"authorization/roles.json\");\r\n$.server.accessRightFileName = path.join($.server.dataPath, \"authorization/accessRight.json\");\r\n$.server.emailVerificationFileName = path.join($.server.rootPath, \"authentication/emailVerification.html\");\r\n\r\nexport var app = express();\r\nprocess.env.NODE_ENV = process.env.NODE_ENV || \"development\";\r\n\r\nimport xDb = require(\"./services/db\");\r\nxDb.connect();\r\n\r\napp.use(bodyparser.json());\r\napp.use(passport.initialize());\r\n\r\nmorgan.token(\"statuscolorized\", (expReq, expRes): string => {\r\n    var color = 32; // green\r\n    var status = expRes.statusCode;\r\n    if (status >= 500) { color = 31; } // red\r\n    else if (status >= 400) {color = 33;} // yellow\r\n    else if (status >= 300) {color = 36;} // cyan\r\n    return \"\\x1b[\" + color + \"m:\" + status +\"\\x1b[0m\";\r\n});\r\n\r\napp.use(morgan(\":date[iso] :method :url :statuscolorized :response-time ms - :res[content-length]\"));\r\n\r\npassport.serializeUser((user, done: (err: any, id: any) => void) => {\r\n    done(null, user.id);\r\n});\r\n\r\napp.use(function (req: express.Request, res: express.Response, next) {\r\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n    res.header(\"Access-Control-Allow-Methods\", \"GET,PUT,POST,DELETE\");\r\n    res.header(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization\");\r\n    next();\r\n}); \r\n\r\n//static files routes\r\napp.use(\"/\", express.static(__dirname + \"/../web\"));\r\n//app.use(\"/Scripts\", express.static(__dirname + \"/../../seedTSClient/libs\"));\r\napp.use(\"/bower_components\", express.static(__dirname + \"/../bower_components\"));\r\n//app.use(\"/app\", express.static(__dirname));\r\napp.use(\"/styles\", express.static(__dirname + \"/../styles\"));\r\n//app.use(\"/fonts\", express.static(__dirname + \"/../../seedTSClient/fonts\"));\r\napp.use(\"/images\", express.static(__dirname + \"/../images\"));\r\napp.use(\"/pictures\", express.static($.server.picturesPath));\r\n\r\n//authentication strategy\r\npassport.use(\"local-register\", xLocalStrategy.register());\r\npassport.use(\"local-login\", xLocalStrategy.login());\r\n\r\n//authentication routes\r\napp.post(\"/auth/register\", passport.authenticate(\"local-register\"), $AuthLocal.register);\r\napp.post(\"/auth/login\", passport.authenticate(\"local-login\"), $AuthLocal.login);\r\napp.get(\"/auth/verifyemail\", xEmailVerif.verify);\r\napp.post(\"/auth/facebook\", xAuthFacebook.facebookAuth);\r\napp.post(\"/auth/google\", xAuthGoogle.googleAuth);\r\n\r\n//authorization\r\nimport $AuthorizationRoutes = require(\"./authorization/authorizationRoutes\");\r\nrootRoute = \"/api/authorization/roles\";\r\napp.get(rootRoute, $AuthLocal.authenticationCheck, $Authorization.checksAccessRight(\"ROLES_GET_ALL\"), $AuthorizationRoutes.getAllRoles);\r\n\r\n//pictures routes\r\nimport $PicturesRoutes = require(\"./pictures/picturesRoutes\");\r\nrootRoute = \"/api/pictures/\";\r\napp.post(rootRoute + \"upload\", $AuthLocal.authenticationCheck, $Authorization.checksAccessRight(\"PICTURES_POST_UPLOAD\"), $PicturesRoutes.uploadPicture);\r\n//app.get(rootRoute, $AuthLocal.authenticationCheck, $Authorization.checksAccessRight(\"PICTURES_GET_ALL\"), $PicturesRoutes.getAllPictures);\r\napp.get(rootRoute, $PicturesRoutes.getAllPictures);\r\napp.delete(rootRoute + \":id\", $AuthLocal.authenticationCheck, $Authorization.checksAccessRight(\"PICTURES_DELETE_ID\"), $PicturesRoutes.deletePicture);\r\n\r\n//users routes\r\nimport $UsersRoutes = require(\"./users/usersRoutes\");\r\nrootRoute = \"/api/adm/users/\";\r\napp.post(rootRoute, $AuthLocal.authenticationCheck, $Authorization.checksAccessRight(\"USERS_POST_CREATE\"), $UsersRoutes.create);\r\napp.get(rootRoute + \":id?\", $AuthLocal.authenticationCheck, $Authorization.checksAccessRight(\"USERS_GET_ID\"), $UsersRoutes.find);\r\napp.delete(rootRoute + \":id?\", $AuthLocal.authenticationCheck, $Authorization.checksAccessRight(\"USERS_DELETE_ID\"), $UsersRoutes.remove);\r\napp.put(rootRoute + \":id?\", $AuthLocal.authenticationCheck, $Authorization.checksAccessRight(\"USERS_PUT_ID\"), $UsersRoutes.update);\r\n\r\nrootRoute = \"/api/adm/users/me\";\r\napp.get(rootRoute, $AuthLocal.authenticationCheck, $UsersRoutes.findMe);\r\napp.put(rootRoute, $AuthLocal.authenticationCheck, $UsersRoutes.updateMe);\r\n\r\n//paints routes\r\nimport $PaintsRoutes = require(\"./paints/paintsRoutes\");\r\nvar rootRoute = \"/api/paints/\";\r\napp.post(rootRoute, $AuthLocal.authenticationCheck, $Authorization.checksAccessRight(\"PAINTS_POST\"),$PaintsRoutes.create);\r\napp.get(rootRoute + \":id?\", $AuthLocal.authenticationCheck, $Authorization.checksAccessRight(\"PAINTS_GET_ID\"), $PaintsRoutes.find);\r\napp.delete(rootRoute + \":id?\", $AuthLocal.authenticationCheck, $Authorization.checksAccessRight(\"PAINTS_DELETE_ID\"), $PaintsRoutes.remove);\r\napp.put(rootRoute + \":id?\", $AuthLocal.authenticationCheck, $Authorization.checksAccessRight(\"PAINTS_PUT_ID\"), $PaintsRoutes.update);\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n    // configure stuff here\r\n}\r\n\r\napp.get(\"*\", (req: express.Request, res: express.Response, next) => {\r\n    res.redirect(\"/index.html\");\r\n});\r\n\r\nif (!process.env.PORT) { process.env.PORT = 3000; }\r\n\r\nvar srv = app.listen(process.env.PORT, process.env.IP);\r\nsrv.on(\"listening\", () => {\r\n    $log.info(\"webserver listening http requests on:\" + process.env.PORT);\r\n});\r\n"],"sourceRoot":"/source/"}