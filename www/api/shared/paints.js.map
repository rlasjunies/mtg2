<<<<<<< HEAD
{"version":3,"sources":["shared/paints.ts"],"names":["paintModel","findPaints"],"mappings":"AACA,OAAO,KAAK,QAAQ,MAAM,UAAU,CAAC;AACrC,OAAO,KAAK,OAAO,MAAM,UAAU,CAAC;AAiBpC,IAAI,WAAW,GAAgC,IAAI,QAAQ,CAAC,MAAM,EAAE,CAAC;AACrE,WAAW,CAAC,GAAG,CAAC;IACZ,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IACvB,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IAC7B,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IACtB,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IACzB,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IACvB,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IACtB,SAAS,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;CAC9B,CAAC,CAAC;AAEH;IACIA,MAAMA,CAAcA,QAAQA,CAACA,KAAKA,CAAiBA,OAAOA,EAAEA,WAAWA,CAACA,CAACA;AAC7EA,CAACA;AAED,2BAA2B,KAAS;IAChCC,MAAMA,CAACA,OAAOA,CAACA,IAAIA,CAACA,UAAUA,EAAEA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA;AACzDA,CAACA;AAED,WAAW,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC","file":"shared/paints.js","sourcesContent":["///<reference path=\"../../typings/tsd.d.ts\"/>\r\nimport * as mongoose from \"mongoose\";\r\nimport * as Promise from \"bluebird\";\r\n\r\nexport interface IPaintModel extends mongoose.Model<IPaintDocument> {\r\n}\r\n\r\nexport interface IPaintSchema extends mongoose.Schema {\r\n    methods: any; // used to extend the toJSON function\r\n}\r\n\r\nexport interface IPaintObject {\r\n    title: string;\r\n    description: string;\r\n}\r\n\r\nexport interface IPaintDocument extends IPaintObject, mongoose.Document {\r\n}\r\n\r\nvar paintSchema: IPaintSchema = <IPaintSchema> new mongoose.Schema();\r\npaintSchema.add({\r\n    title: { type: String },\r\n    description: { type: String },\r\n    year: { type: String },\r\n    picture: { type: String },\r\n    order: { type: Number },\r\n    size: { type: String },\r\n    thumbnail: { Type: String }\r\n});\r\n\r\nexport function paintModel(): IPaintModel {\r\n    return <IPaintModel>mongoose.model<IPaintDocument>(\"paint\", paintSchema);\r\n}\r\n\r\nexport function findPaints(query:any) {\r\n    return Promise.cast(paintModel().find(query).exec());\r\n}\r\n\r\nexport var createJob = Promise.promisify(paintModel().create, paintModel());\r\n"],"sourceRoot":"/source/"}
=======
{"version":3,"sources":["shared/paints.ts"],"names":["paintModel","findPaints"],"mappings":";;;;;;;;IAAA,6CAA6C;IAC7C,IAAO,QAAQ,WAAW,UAAU,CAAC,CAAC;IACtC,IAAO,OAAO,WAAW,UAAU,CAAC,CAAC;IAiBrC,IAAI,WAAW,GAAgC,IAAI,QAAQ,CAAC,MAAM,EAAE,CAAC;IACrE,WAAW,CAAC,GAAG,CAAC;QACZ,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;QACvB,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;QAC7B,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;QACtB,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;QACzB,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;QACvB,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;QACtB,SAAS,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;KAC9B,CAAC,CAAC;IAEH;QACIA,MAAMA,CAAcA,QAAQA,CAACA,KAAKA,CAAiBA,OAAOA,EAAEA,WAAWA,CAACA,CAACA;IAC7EA,CAACA;IAFe,kBAAU,aAEzB,CAAA;IAED,oBAA2B,KAAS;QAChCC,MAAMA,CAACA,OAAOA,CAACA,IAAIA,CAACA,UAAUA,EAAEA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA;IACzDA,CAACA;IAFe,kBAAU,aAEzB,CAAA;IAEU,iBAAS,GAAG,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC","file":"shared/paints.js","sourcesContent":["///<reference path=\"../../typings/tsd.d.ts\"/>\r\nimport mongoose = require(\"mongoose\");\r\nimport Promise = require(\"bluebird\");\r\n\r\nexport interface IPaintModel extends mongoose.Model<IPaintDocument> {\r\n}\r\n\r\nexport interface IPaintSchema extends mongoose.Schema {\r\n    methods: any; // used to extend the toJSON function\r\n}\r\n\r\nexport interface IPaintObject {\r\n    title: string;\r\n    description: string;\r\n}\r\n\r\nexport interface IPaintDocument extends IPaintObject, mongoose.Document {\r\n}\r\n\r\nvar paintSchema: IPaintSchema = <IPaintSchema> new mongoose.Schema();\r\npaintSchema.add({\r\n    title: { type: String },\r\n    description: { type: String },\r\n    year: { type: String },\r\n    picture: { type: String },\r\n    order: { type: Number },\r\n    size: { type: String },\r\n    thumbnail: { Type: String }\r\n});\r\n\r\nexport function paintModel(): IPaintModel {\r\n    return <IPaintModel>mongoose.model<IPaintDocument>(\"paint\", paintSchema);\r\n}\r\n\r\nexport function findPaints(query:any) {\r\n    return Promise.cast(paintModel().find(query).exec());\r\n}\r\n\r\nexport var createJob = Promise.promisify(paintModel().create, paintModel());\r\n"],"sourceRoot":"/source/"}
>>>>>>> origin/master
