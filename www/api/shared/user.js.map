{"version":3,"sources":["shared/user.ts"],"names":["userModel"],"mappings":"AAAA,AACA,6CAD6C;AAC7C,IAAY,QAAQ,WAAM,UAAU,CAAC,CAAA;AACrC,IAAY,MAAM,WAAM,eAAe,CAAC,CAAA;AAoDxC,IAAI,UAAU,GAA+B,IAAI,QAAQ,CAAC,MAAM,EAAE,CAAC;AACnE,UAAU,CAAC,GAAG,CAAC;IACX,KAAK,EAAE,MAAM;IACb,QAAQ,EAAE,MAAM;IAChB,MAAM,EAAE,OAAO;IACf,QAAQ,EAAE,MAAM;IAChB,UAAU,EAAE,MAAM;IAClB,WAAW,EAAE,MAAM;IACnB,OAAO,EAAE,MAAM;IACf,YAAY,EAAE,CAAC,MAAM,CAAC;CACzB,CAAC,CAAC;AAEH,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,IAAa;IAC1C,IAAI,IAAI,GAAkB,IAAI,CAAC;IAE/B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAC/B,MAAM,CAAC,IAAI,EAAE,CAAC;IAClB,CAAC;IAED,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,UAAC,GAAG,EAAE,IAAI;QACzB,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,UAAC,GAAG,EAAE,IAAI;YACjD,mDAAmD;YAC/C,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACN,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC;YAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,MAAM,CAAC,IAAI,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,UAAU,CAAC,OAAO,CAAC,gBAAgB,GAAG,UAAU,QAAe,EAAE,QAA4C;IACzG,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AACtD,CAAC,CAAC;AAEF,UAAU,CAAC,OAAO,CAAC,MAAM,GAAG;IACxB,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;IAC3B,OAAO,IAAI,CAAC,QAAQ,CAAC;IACrB,MAAM,CAAC,IAAI,CAAC;AAChB,CAAC,CAAC;AAEF;IACIA,MAAMA,CAAaA,QAAQA,CAACA,KAAKA,CAAgBA,MAAMA,EAAEA,UAAUA,CAACA,CAACA;AACzEA,CAACA;AAFe,iBAAS,YAExB,CAAA","file":"shared/user.js","sourcesContent":["///<reference path=\"../../typings/tsd.d.ts\"/>\r\nimport * as mongoose from \"mongoose\";\r\nimport * as bcrypt from \"bcrypt-nodejs\";\r\n\r\n// user\r\nexport interface IUserDocument extends mongoose.Document {\r\n    //_id: string;\r\n    email: string;\r\n    password: string;\r\n    active: boolean;\r\n    googleId: string;\r\n    facebookId: string;\r\n    displayName: string;\r\n    picture: string;\r\n    allowedRoles: string[];\r\n    // toJSON(): void;\r\n    //firstName: string;\r\n    //lastName: string;\r\n    //roles: string[];\r\n    //timezoneOffset: number;\r\n    //createDate?: number;\r\n    //modifiedDate?: number;\r\n    //socialNetworks: ISocialNetwork[];\r\n    comparePasswords(pwd:string, callback:(err:Error,isMatching:boolean)=>{});\r\n}\r\n\r\n//export interface ISocialNetwork {\r\n//    name: string;\r\n//    username: string;\r\n//}\r\n\r\n//TODO duplication between UserDoc / Objects?\r\nexport interface IUserObject {\r\n    email: string;\r\n    password: string;\r\n    active: boolean;\r\n    googleId: string;\r\n    facebookId: string;\r\n    displayName: string;\r\n    picture: string;\r\n    allowedRoles: string[];\r\n}\r\n\r\nexport interface IUserModel extends mongoose.Model<IUserDocument> {\r\n    googleID: string;\r\n    displayName: string;\r\n    facebookId: string;\r\n}\r\n\r\n// used to extend the toJSON function\r\nexport interface IUserSchema extends mongoose.Schema {\r\n    methods: any\r\n}\r\n\r\nvar userSchema: IUserSchema =  <IUserSchema> new mongoose.Schema();\r\nuserSchema.add({\r\n    email: String,\r\n    password: String,\r\n    active: Boolean,\r\n    googleId: String,\r\n    facebookId: String,\r\n    displayName: String,\r\n    picture: String,\r\n    allowedRoles: [String]\r\n});\r\n\r\nuserSchema.pre(\"save\", function (next:Function) {\r\n    var user: IUserDocument = this;\r\n\r\n    if (!user.isModified(\"password\")) {\r\n        return next();\r\n    }\r\n\r\n    bcrypt.genSalt(10, (err, salt) => {\r\n        if (err) {\r\n            return next(err);\r\n        }\r\n        bcrypt.hash(user.password, salt, null, (err, hash) => {\r\n        //bcrypt.hash(user.password, salt, (err, hash) => {\r\n            if (err) {\r\n                return next(err);\r\n            }\r\n\r\n            user.password = hash;\r\n            return next();\r\n        });\r\n    });\r\n});\r\n\r\nuserSchema.methods.comparePasswords = function (password:string, callback:(err:Error, isMatching:boolean)=>{}) {\r\n    bcrypt.compare(password, this.password, callback);\r\n};\r\n\r\nuserSchema.methods.toJSON = function () {\r\n    var user = this.toObject();\r\n    delete user.password;\r\n    return user;\r\n};\r\n\r\nexport function userModel(): IUserModel {\r\n    return <IUserModel>mongoose.model<IUserDocument>(\"User\", userSchema);\r\n}\r\n"],"sourceRoot":"/source/"}