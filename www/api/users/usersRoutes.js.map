{"version":3,"sources":["users/usersRoutes.ts"],"names":["create","find","remove","update","findMe","updateMe"],"mappings":"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","file":"users/usersRoutes.js","sourcesContent":["import e = require(\"express\");\r\n\r\nimport $ = require(\"../services/mtg\");\r\n\r\nimport $usersModel = require(\"../shared/user\");\r\n//import $authorization = require(\"../authorization/authorizationService\");\r\n\r\nvar moduleName = \"usersRoutes@\";\r\n\r\n//Create\r\nexport function create(expReq: e.xRequest<e.IRouteParamId>, expRes: e.Response, next:Function) {\r\n    $.log.profile(moduleName + \"@create\");\r\n        var user = $usersModel.userModel();\r\n        var newUser = new user(expReq.body);\r\n        newUser.validate(function (err: any) {\r\n            newUser.save<$usersModel.IUserDocument>((err, user) => {\r\n                if (err) { return expRes.status(500).write({ message: \"Error writing job!\" }); }\r\n\r\n                $.log.debug(moduleName + \"@create:\\n\" + user);\r\n                $.log.profile(moduleName + \"@create\");\r\n                return expRes.status(200).send(user);\r\n            });\r\n        });\r\n};\r\n\r\n//find\r\nexport function find(expReq: e.xRequest<e.IRouteParamId>, expRes: e.Response, next:Function) {\r\n    $.log.profile(moduleName + \"@find\");\r\n        var users: $usersModel.IUserModel = $usersModel.userModel();\r\n\r\n        var qry = {};\r\n        if (expReq.params.id) {\r\n            qry = { _id: expReq.params.id };\r\n        }\r\n\r\n        users.find(qry,(err, user) => {\r\n            if (err) {\r\n                return expRes.status(500).write({ message: \"Error getting jobs!\" });\r\n            }\r\n\r\n            $.log.debug(\"expReq.params.id:\" + expReq.params.id);\r\n            $.log.profile(moduleName + \"@find\");\r\n            expRes.status(200).send(user);\r\n        });\r\n    //}\r\n};\r\n\r\n//remove\r\nexport function remove(expReq: e.xRequest<e.IRouteParamId>, expRes: e.Response, next:Function) {\r\n    $.log.profile(moduleName + \"@remove\");\r\n    var mdlUsers: $usersModel.IUserModel = $usersModel.userModel();\r\n\r\n    if (!expReq.params.id) {\r\n        throw new Error(\"ID parameter is required!\");\r\n    }\r\n\r\n    mdlUsers.findByIdAndRemove(expReq.params.id, (err, users) => {\r\n        if (err) {\r\n            return expRes.status(500).write({ message: \"Error getting users!\" });\r\n        }\r\n\r\n        $.log.profile(moduleName + \"@remove\");\r\n        expRes.status(200).send(users);\r\n    });\r\n\r\n};\r\n\r\n//update\r\nexport function update(expReq: e.xRequest<e.IRouteParamId>, expRes: e.Response, next:Function) {\r\n    $.log.profile(moduleName + \"@update\");\r\n    var mdlUsers: $usersModel.IUserModel = $usersModel.userModel();\r\n    var userModel = $usersModel.userModel();\r\n    var newUser = new userModel(expReq.body);\r\n\r\n    if (!expReq.params.id) {\r\n        throw new Error(\"Is parameter is required!\");\r\n    }\r\n\r\n    mdlUsers.findByIdAndUpdate(expReq.params.id, expReq.body, (err, users) => {\r\n        if (err) {\r\n            return expRes.status(500).write({ message: \"Error updating user!\" });\r\n        }\r\n\r\n        $.log.profile(moduleName + \"@update\");\r\n        expRes.status(200).send(users);\r\n    });\r\n};\r\n\r\n//findMe\r\nexport function findMe(expReq: e.xRequest<e.IRouteParamId>, expRes: e.Response, next:Function) {\r\n let msg = `${moduleName}@findMe not implemented yet!`;\r\n    $.log.error(msg);\r\n    return expRes.status(500).write({ message: msg });\r\n\r\n//         var users: $usersModel.IUserModel = $usersModel.userModel();\r\n// \r\n//         var qry = {};\r\n//         //if (expReq.params.id) {\r\n//             qry = { _id: expReq.user.id };\r\n//         //}\r\n// \r\n//         users.find(qry,(err, user) => {\r\n//             if (err) {\r\n//                 return expRes.status(500).write({ message: \"Error getting jobs!\" });\r\n//             }\r\n// \r\n//             $.log.debug(\"expReq.params.id:\" + expReq.params.id);\r\n//             $.log.profile(moduleName + \"@find\");\r\n//             expRes.status(200).send(user);\r\n//         });\r\n//     //}\r\n};\r\n\r\n\r\n//updateMe\r\nexport function updateMe(expReq: e.xRequest<e.IRouteParamId>, expRes: e.Response, next:Function) {\r\n let msg = `${moduleName}@updateMe not implemented yet!`;\r\n    $.log.error(msg);\r\n    return expRes.status(500).write({ message: msg });\r\n\r\n//     $.log.profile(moduleName + \"@update\");\r\n//     var mdlUsers: $usersModel.IUserModel = $usersModel.userModel();\r\n//     var userModel = $usersModel.userModel();\r\n//     var newUser = new userModel(expReq.body);\r\n// \r\n//     if (!expReq.params.id) {\r\n//         throw new Error(\"Is parameter is required!\");\r\n//     }\r\n// \r\n//     mdlUsers.findByIdAndUpdate(expReq.params.id, expReq.body, (err, users) => {\r\n//         if (err) {\r\n//             return expRes.status(500).write({ message: \"Error updating user!\" });\r\n//         }\r\n// \r\n//         $.log.profile(moduleName + \"@update\");\r\n//         expRes.status(200).send(users);\r\n//     });\r\n};"],"sourceRoot":"/source/"}