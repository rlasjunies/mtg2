{"version":3,"sources":["authentication/localAuth.ts"],"names":["register","login","authenticationCheck"],"mappings":"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","file":"authentication/localAuth.js","sourcesContent":["import * as express from \"express\";\r\nimport * as jwt from \"jwt-simple\";\r\nimport * as moment from \"moment\";\r\n\r\nimport * as $Token from \"./token\";\r\nimport * as $EmailVerification from \"./emailVerification\";\r\nimport * as $log from \"../services/logger\";\r\nimport * as $configSecret from \"../services/configSecret\";\r\n\r\nimport * as $ from \"../services/mtg\";\r\nimport * as $usersModel from \"../shared/user\";\r\n\r\nvar moduleName = \"localAuth\";\r\n\r\nexport function register(expReq: express.Request, expRes: express.Response, info:any) {\r\n    $EmailVerification.send(expReq.body.email, expRes);\r\n    $Token.createSendToken(expReq.user, expRes);\r\n}\r\n\r\nexport function login (expReq: express.Request, expRes: express.Response, info:any) {\r\n    $Token.createSendToken(expReq.user, expRes);\r\n}\r\n\r\nexport function authenticationCheck(expReq: express.Request, expRes: express.Response, next:Function) {\r\n    if (!expReq.headers[\"authorization\"]) {\r\n        return expRes.status(401).send({ message: \"you are not authorized!\" });\r\n    } else {\r\n        $log.debug(moduleName + \"@authentication: req.headers['authorization']\" + expReq.headers[\"authorization\"]);\r\n        var authorization = expReq.headers[\"authorization\"];\r\n        var token = authorization.split(\" \")[1];\r\n        try {\r\n            var payload = jwt.decode(token, $configSecret.JWT_SECRET);\r\n        }catch(e){\r\n            payload = {};\r\n        }\r\n\r\n        if (!payload.sub) {\r\n            return expRes.status(401).send({ message: \"Authentication failed\" });\r\n        } else {\r\n            if (moment.unix(payload.exp).diff(moment(), 'second') < 0){\r\n                console.log(\"!!!!token expired!!!\");\r\n            }\r\n\r\n            //load user info\r\n            var users: $usersModel.IUserModel = $usersModel.userModel();\r\n            var qry = { _id: payload.sub};\r\n\r\n            users.find(qry,(err:any, user: $usersModel.IUserDocument[]) => {\r\n                if (err) {\r\n                    return expRes.status(500).write({ message: \"Error trying to find the user.\" + JSON.stringify(err) });\r\n                }\r\n\r\n                $.log.debug(\"expReq.params.id:\" + expReq.params.id);\r\n                $.log.profile(moduleName + \"@find\");\r\n                //expRes.status(200).send(user);\r\n                expReq.user = user[0]._doc;\r\n\r\n                next();\r\n            });\r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}