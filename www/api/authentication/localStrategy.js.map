{"version":3,"sources":["authentication/localStrategy.ts"],"names":["login","register"],"mappings":"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","file":"authentication/localStrategy.js","sourcesContent":["import passport_local = require(\"passport-local\");\r\nimport libuser = require(\"../shared/user\");\r\nimport $log = require(\"../services/logger\");\r\n\r\nvar moduleName = \"localStratregy - \";\r\nvar strategyOptions = { usernameField: \"email\" };\r\nexport function login() {\r\n    return new passport_local.Strategy(strategyOptions, (username, password:string, done) => {\r\n        $log.profile(\"passport-login\");\r\n        var qryUser = { email: username };\r\n        \r\n        libuser.userModel().findOne(qryUser, function (err, dbUser) {\r\n            if (err) {\r\n                $log.error(\"login.findOne error:\" + err);\r\n                return done(err);\r\n            }\r\n\r\n            if (!dbUser) {\r\n                // TODO again the message is not \"readable for the client part\r\n                $log.info (\"login.dbUser does not exists!\");\r\n                return done(null, false, { message: \"Wrong email / password\" });\r\n            }\r\n\r\n            dbUser.comparePasswords(password, (err: Error, isMatching:boolean)=> {\r\n                if (err) {\r\n                    $log.error(\"login.dbUser.comparePasswords error:\" + err);\r\n                    return done(err);\r\n                }\r\n\r\n                if (!isMatching) {\r\n                    $log.info(\"login.dbUser.comparePasswords:\" + err);\r\n                    return done(null, false, { message: \"Wrong email / password\" });\r\n                }\r\n\r\n                $log.info(\"User: %s logged in\", dbUser.email);\r\n                return done(null, dbUser);\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport function register() {\r\n    return new passport_local.Strategy(strategyOptions, (username, password, done) => {\r\n        var userModel = libuser.userModel();\r\n        var qryUser = { email: username };\r\n\r\n        libuser.userModel().findOne(qryUser, (err, dbUser) => {\r\n            if (err) {\r\n                $log.error(\"register.findOne error:\" + err);\r\n                return done(err);\r\n            }\r\n\r\n            if (dbUser) {\r\n                // TODO message not clear when it happen\r\n                $log.error(\"register.findOne user already exist in the database!\");\r\n                return done(null, false, { message: \"email already exists!\" });\r\n            }\r\n\r\n            var newUser: libuser.IUserDocument = new userModel({\r\n                email: username,\r\n                password: password\r\n            });\r\n\r\n            newUser.save(function (err) {\r\n                if (err) {\r\n                    $log.error(\"resgister.newUser.save error:\" + err);\r\n                    return done(err);\r\n                }\r\n                return done(null, newUser);\r\n            });\r\n\r\n        });\r\n    });\r\n}\r\n"],"sourceRoot":"/source/"}