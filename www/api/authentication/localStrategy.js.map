{"version":3,"sources":["authentication/localStrategy.ts"],"names":["login","register"],"mappings":"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","file":"authentication/localStrategy.js","sourcesContent":["import * as passport_local from \"passport-local\";\r\nimport * as libuser from \"../shared/user\";\r\nimport * as $log from \"../services/logger\";\r\n\r\nvar moduleName = \"localStratregy - \";\r\nvar strategyOptions = { usernameField: \"email\" };\r\nexport function login() {\r\n    return new passport_local.Strategy(strategyOptions, (username, password:string, done) => {\r\n        $log.profile(\"passport-login\");\r\n        var qryUser = { email: username };\r\n\r\n        libuser.userModel().findOne(qryUser, function (err, dbUser) {\r\n            if (err) {\r\n                $log.error(\"login.findOne error:\" + err);\r\n                return done(err);\r\n            }\r\n\r\n            if (!dbUser) {\r\n                // TODO again the message is not \"readable for the client part\r\n                $log.info (\"login.dbUser does not exists!\");\r\n                return done(null, false, { message: \"Wrong email / password\" });\r\n            }\r\n\r\n            dbUser.comparePasswords(password, (err: Error, isMatching:boolean)=> {\r\n                if (err) {\r\n                    $log.error(\"login.dbUser.comparePasswords error:\" + err);\r\n                    return done(err);\r\n                }\r\n\r\n                if (!isMatching) {\r\n                    $log.info(\"login.dbUser.comparePasswords:\" + err);\r\n                    return done(null, false, { message: \"Wrong email / password\" });\r\n                }\r\n\r\n                $log.info(\"User: %s logged in\", dbUser.email);\r\n                return done(null, dbUser);\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport function register() {\r\n    return new passport_local.Strategy(strategyOptions, (username, password, done) => {\r\n        var userModel = libuser.userModel();\r\n        var qryUser = { email: username };\r\n\r\n        libuser.userModel().findOne(qryUser, (err, dbUser) => {\r\n            if (err) {\r\n                $log.error(\"register.findOne error:\" + err);\r\n                return done(err);\r\n            }\r\n\r\n            if (dbUser) {\r\n                // TODO message not clear when it happen\r\n                $log.error(\"register.findOne user already exist in the database!\");\r\n                return done(null, false, { message: \"email already exists!\" });\r\n            }\r\n\r\n            var newUser: libuser.IUserDocument = new userModel({\r\n                email: username,\r\n                password: password\r\n            });\r\n\r\n            newUser.save(function (err) {\r\n                if (err) {\r\n                    $log.error(\"resgister.newUser.save error:\" + err);\r\n                    return done(err);\r\n                }\r\n                return done(null, newUser);\r\n            });\r\n\r\n        });\r\n    });\r\n}\r\n"],"sourceRoot":"/source/"}