{"version":3,"sources":["authentication/facebookAuth.ts"],"names":["facebookAuth"],"mappings":";;;;;;;;IAAA,IAAO,EAAE,WAAW,aAAa,CAAC,CAAC;IACnC,IAAO,OAAO,WAAW,SAAS,CAAC,CAAC;IAGpC,IAAO,aAAa,WAAW,0BAA0B,CAAC,CAAC;IAC3D,IAAO,OAAO,WAAW,gBAAgB,CAAC,CAAC;IAC3C,IAAO,QAAQ,WAAW,SAAS,CAAC,CAAC;IAOrC,sBAA8B,MAAuB,EAAE,MAAuB;QAE1EA,IAAIA,cAAcA,GAAGA,+CAA+CA,CAACA;QACrEA,IAAIA,WAAWA,GAAGA,+BAA+BA,CAACA;QAElDA,IAAIA,MAAMA,GAAGA;YACTA,SAASA,EAAEA,MAAMA,CAACA,IAAIA,CAACA,QAAQA;YAC/BA,YAAYA,EAAEA,MAAMA,CAACA,IAAIA,CAACA,WAAWA;YACrCA,aAAaA,EAAEA,aAAaA,CAACA,eAAeA;YAC5CA,IAAIA,EAAEA,MAAMA,CAACA,IAAIA,CAACA,IAAIA;SACzBA,CAACA;QAEFA,OAAOA,CAACA,GAAGA,CAACA;YACRA,GAAGA,EAAEA,cAAcA;YACnBA,EAAEA,EAAEA,MAAMA;SACTA,EAAEA,UAACA,GAAOA,EAAEA,QAAYA,EAAEA,WAAeA;YAC1CA,WAAWA,GAAGA,EAAEA,CAACA,KAAKA,CAACA,WAAWA,CAACA,CAACA;YAEpCA,OAAOA,CAACA,GAAGA,CAACA;gBACRA,GAAGA,EAAEA,WAAWA;gBAChBA,EAAEA,EAAEA,WAAWA;gBACfA,IAAIA,EAAEA,IAAIA;aACbA,EAAEA,UAACA,GAAOA,EAAEA,QAAYA,EAAEA,OAAyBA;gBAC5CA,IAAIA,KAAKA,GAAGA,OAAOA,CAACA,SAASA,EAAEA,CAACA;gBAEhCA,KAAKA,CAACA,OAAOA,CAACA,EAAEA,UAAUA,EAAEA,OAAOA,CAACA,EAAEA,EAAEA,EAAEA,UAACA,GAAGA,EAAEA,YAAYA;oBACxDA,EAAEA,CAACA,CAACA,YAAYA,CAACA,CAACA,CAACA;wBACfA,MAAMA,CAACA,QAAQA,CAACA,eAAeA,CAACA,YAAYA,EAAEA,MAAMA,CAACA,CAACA;oBAC1DA,CAACA;oBACDA,IAAIA,OAAOA,GAA0BA,IAAIA,KAAKA,CAACA,EAAEA,CAACA,CAACA;oBAEnDA,OAAOA,CAACA,UAAUA,GAAGA,OAAOA,CAACA,EAAEA,CAACA;oBAChCA,OAAOA,CAACA,WAAWA,GAAGA,OAAOA,CAACA,IAAIA,CAACA;oBACnCA,AAEAA,kGAFkGA;oBAClGA,6CAA6CA;oBAC7CA,OAAOA,CAACA,IAAIA,CAAwBA,UAACA,GAAGA,EAAEA,IAAIA;wBAC1CA,EAAEA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;4BACNA,MAAMA,GAAGA,CAACA;wBACdA,CAACA;wBAEDA,QAAQA,CAACA,eAAeA,CAACA,OAAOA,EAAEA,MAAMA,CAACA,CAACA;oBAC9CA,CAACA,CAACA,CAACA;gBACPA,CAACA,CAACA,CAACA;YACXA,CAACA,CAACA,CAACA;QACPA,CAACA,CAACA,CAACA;IACPA,CAACA;IA7Ce,oBAAY,eA6C3B,CAAA","file":"authentication/facebookAuth.js","sourcesContent":["import qs = require(\"querystring\");\r\nimport request = require(\"request\");\r\nimport express = require(\"express\");\r\n\r\nimport $ConfigSecret = require(\"../services/configSecret\");\r\nimport libUser = require(\"../shared/user\");\r\nimport libToken = require(\"./token\");\r\n\r\ninterface IFacebookProfile {\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\nexport function facebookAuth (expReq: express.Request, expRes:express.Response) {\r\n\r\n    var accessTokenUrl = \"https://graph.facebook.com/oauth/access_token\";\r\n    var graphApiUrl = \"https://graph.facebook.com/me\";\r\n\r\n    var params = {\r\n        client_id: expReq.body.clientId,\r\n        redirect_uri: expReq.body.redirectUri,\r\n        client_secret: $ConfigSecret.FACEBOOK_SECRET,\r\n        code: expReq.body.code\r\n    };\r\n\r\n    request.get({\r\n        url: accessTokenUrl,\r\n        qs: params\r\n        }, (err:any, response:any, accessToken:any) => {\r\n        accessToken = qs.parse(accessToken);\r\n\r\n        request.get({\r\n            url: graphApiUrl,\r\n            qs: accessToken,\r\n            json: true\r\n        }, (err:any, response:any, profile: IFacebookProfile) => {\r\n                var users = libUser.userModel();\r\n\r\n                users.findOne({ facebookId: profile.id }, (err, existingUser) => {\r\n                    if (existingUser) {\r\n                        return libToken.createSendToken(existingUser, expRes);\r\n                    }\r\n                    var newUser: libUser.IUserDocument = new users({});\r\n\r\n                    newUser.facebookId = profile.id;\r\n                    newUser.displayName = profile.name;\r\n                    // TODO pretty sure it\"s not good to store only these information, what\"s happen if the SAME user \r\n                    // login with goodle or local authentication?\r\n                    newUser.save<libUser.IUserDocument>((err, resp) => {\r\n                        if (err) {\r\n                            throw err;\r\n                        }\r\n\r\n                        libToken.createSendToken(newUser, expRes);\r\n                    });\r\n                });\r\n        });\r\n    });\r\n}\r\n"],"sourceRoot":"/source/"}