<<<<<<< HEAD
{"version":3,"sources":["authentication/token.ts"],"names":["createSendToken"],"mappings":"AACA,OAAO,KAAK,GAAG,MAAM,YAAY,CAAC;AAClC,OAAO,KAAK,MAAM,MAAM,QAAQ,CAAC;AACjC,OAAO,KAAK,aAAa,MAAM,0BAA0B,CAAC;AAE1D,gCAAgC,IAAwB,EAAE,GAAoB;IAC1EA,IAAIA,OAAOA,GAAGA;QACVA,GAAGA,EAAEA,IAAIA,CAACA,EAAEA;QACZA,8DAA8DA;QAC9DA,yEAAyEA;QACzEA,GAAGA,EAAEA,MAAMA,EAAEA,CAACA,GAAGA,CAACA,GAAGA,EAAEA,SAASA,CAACA,CAACA,IAAIA,EAAEA;KAC3CA,CAACA;IAEFA,+DAA+DA;IAC/DA,mFAAmFA;IACnFA,6DAA6DA;IAE7DA,qBAAqBA;IACrBA,uBAAuBA;IACvBA,4CAA4CA;IAG5CA,IAAIA,KAAKA,GAAGA,GAAGA,CAACA,MAAMA,CAACA,OAAOA,EAAEA,aAAaA,CAACA,UAAUA,CAACA,CAACA;IAE1DA,2BAA2BA;IAC3BA,MAAMA,CAACA,GAAGA,CAACA,MAAMA,CAACA,GAAGA,CAACA,CAACA,IAAIA,CAACA;QACxBA,IAAIA,EAAEA,IAAIA,CAACA,MAAMA,EAAEA;QACnBA,KAAKA,EAAEA,KAAKA;KACfA,CAACA,CAACA;AACPA,CAACA","file":"authentication/token.js","sourcesContent":["import * as express from \"express\";\r\nimport * as jwt from \"jwt-simple\";\r\nimport * as moment from \"moment\";\r\nimport * as $configSecret from \"../services/configSecret\";\r\nimport * as $user from '../shared/user';\r\nexport function createSendToken(user:$user.IUserDocument, res:express.Response) {\r\n    var payload = {\r\n        sub: user.id,\r\n        // TODO check that the expiration is well managed by the token\r\n        // expiration should be renewed everytime the user, is doing somehitng!!!\r\n        exp: moment().add(360, \"minutes\").unix()\r\n    };\r\n\r\n    ////console.log(\"Create expiration date:\" + moment().format());\r\n    ////console.log(\"Create expiration date exp:\" + moment.unix(payload.exp).format());\r\n    ////console.log(\"exp1\" + moment().add(1, \"minute\").format());\r\n\r\n    //var exp = moment();\r\n    //exp.add(1, \"minute\");\r\n    //console.log(\"exp2\" + exp.format(\"unix\"););\r\n\r\n\r\n    var token = jwt.encode(payload, $configSecret.JWT_SECRET);\r\n\r\n    // RL- attention changement\r\n    return res.status(200).send({\r\n        user: user.toJSON(),\r\n        token: token\r\n    });\r\n}\r\n"],"sourceRoot":"/source/"}
=======
{"version":3,"sources":["authentication/token.ts"],"names":["createSendToken"],"mappings":";;;;;;;;IACA,IAAO,GAAG,WAAW,YAAY,CAAC,CAAC;IACnC,IAAO,MAAM,WAAW,QAAQ,CAAC,CAAC;IAClC,IAAO,aAAa,WAAW,0BAA0B,CAAC,CAAC;IAE3D,yBAAgC,IAAwB,EAAE,GAAoB;QAC1EA,IAAIA,OAAOA,GAAGA;YACVA,GAAGA,EAAEA,IAAIA,CAACA,EAAEA;YACZA,8DAA8DA;YAC9DA,yEAAyEA;YACzEA,GAAGA,EAAEA,MAAMA,EAAEA,CAACA,GAAGA,CAACA,GAAGA,EAAEA,SAASA,CAACA,CAACA,IAAIA,EAAEA;SAC3CA,CAACA;QAEFA,+DAA+DA;QAC/DA,mFAAmFA;QACnFA,6DAA6DA;QAE7DA,qBAAqBA;QACrBA,uBAAuBA;QACvBA,4CAA4CA;QAG5CA,IAAIA,KAAKA,GAAGA,GAAGA,CAACA,MAAMA,CAACA,OAAOA,EAAEA,aAAaA,CAACA,UAAUA,CAACA,CAACA;QAE1DA,2BAA2BA;QAC3BA,MAAMA,CAACA,GAAGA,CAACA,MAAMA,CAACA,GAAGA,CAACA,CAACA,IAAIA,CAACA;YACxBA,IAAIA,EAAEA,IAAIA,CAACA,MAAMA,EAAEA;YACnBA,KAAKA,EAAEA,KAAKA;SACfA,CAACA,CAACA;IACPA,CAACA;IAxBe,uBAAe,kBAwB9B,CAAA","file":"authentication/token.js","sourcesContent":["import express = require(\"express\");\r\nimport jwt = require(\"jwt-simple\");\r\nimport moment = require(\"moment\");\r\nimport $configSecret = require(\"../services/configSecret\");\r\nimport $user = require('../shared/user');\r\nexport function createSendToken(user:$user.IUserDocument, res:express.Response) {\r\n    var payload = {\r\n        sub: user.id,\r\n        // TODO check that the expiration is well managed by the token\r\n        // expiration should be renewed everytime the user, is doing somehitng!!!\r\n        exp: moment().add(360, \"minutes\").unix()\r\n    };\r\n\r\n    ////console.log(\"Create expiration date:\" + moment().format());\r\n    ////console.log(\"Create expiration date exp:\" + moment.unix(payload.exp).format());\r\n    ////console.log(\"exp1\" + moment().add(1, \"minute\").format());\r\n\r\n    //var exp = moment();\r\n    //exp.add(1, \"minute\");\r\n    //console.log(\"exp2\" + exp.format(\"unix\"););\r\n\r\n\r\n    var token = jwt.encode(payload, $configSecret.JWT_SECRET);\r\n\r\n    // RL- attention changement\r\n    return res.status(200).send({\r\n        user: user.toJSON(),\r\n        token: token\r\n    });\r\n}\r\n"],"sourceRoot":"/source/"}
>>>>>>> origin/master
